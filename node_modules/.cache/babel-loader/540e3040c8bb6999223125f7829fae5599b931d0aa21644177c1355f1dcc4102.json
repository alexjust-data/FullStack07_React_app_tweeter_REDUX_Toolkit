{"ast":null,"code":"import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { areTweetsLoaded, getTweet } from './selectors';\nimport { AUTH_LOGIN_REQUEST, AUTH_LOGIN_SUCCESS, TWEETS_CREATED_REQUEST, TWEETS_CREATED_SUCCESS, TWEETS_CREATED_FAILURE, TWEETS_DETAIL_FAILURE, TWEETS_DETAIL_REQUEST, TWEETS_DETAIL_SUCCESS, TWEETS_LOADED_FAILURE, TWEETS_LOADED_REQUEST, TWEETS_LOADED_SUCCESS } from './types';\nexport const authLogin = createAsyncThunk('auth/login', (credentials, {\n  extra: {\n    api: {\n      auth\n    },\n    router\n  },\n  rejectWithValue\n}) => auth.login(credentials).then(() => {\n  var _router$state$locatio, _router$state$locatio2;\n  const to = ((_router$state$locatio = router.state.location.state) === null || _router$state$locatio === void 0 ? void 0 : (_router$state$locatio2 = _router$state$locatio.from) === null || _router$state$locatio2 === void 0 ? void 0 : _router$state$locatio2.pathname) || '/';\n  router.navigate(to);\n}).catch(rejectWithValue));\nexport const authLogout = createAsyncThunk('auth/logout', (_, {\n  extra: {\n    api: {\n      auth\n    }\n  }\n}) => auth.logout());\nexport const tweetsLoadedRequest = () => ({\n  type: TWEETS_LOADED_REQUEST\n});\nexport const tweetsLoadedSuccess = tweets => ({\n  type: TWEETS_LOADED_SUCCESS,\n  payload: tweets\n});\nexport const tweetsLoadedFailure = error => ({\n  type: TWEETS_LOADED_FAILURE,\n  error: true,\n  payload: error\n});\nexport const tweetsList = createAsyncThunk('tweets/list', async (_, {\n  extra: {\n    api: {\n      tweets\n    }\n  },\n  rejectWithValue\n}) => {\n  try {\n    const tweetsList = await tweets.getLatestTweets();\n    return tweetsList;\n  } catch (error) {\n    rejectWithValue(error);\n  }\n}, {\n  condition: (_, {\n    getState\n  }) => !areTweetsLoaded(getState())\n});\nexport const tweetsDetailRequest = () => ({\n  type: TWEETS_DETAIL_REQUEST\n});\nexport const tweetsDetailSuccess = tweet => ({\n  type: TWEETS_DETAIL_SUCCESS,\n  payload: tweet\n});\nexport const tweetsDetailFailure = error => ({\n  type: TWEETS_DETAIL_FAILURE,\n  error: true,\n  payload: error\n});\nexport function detailTweets(tweetId) {\n  return async function (dispatch, getState, {\n    api: {\n      tweets\n    }\n  }) {\n    if (getTweet(tweetId)(getState())) {\n      return;\n    }\n    try {\n      dispatch(tweetsDetailRequest());\n      const tweet = await tweets.getTweet(tweetId);\n      dispatch(tweetsDetailSuccess(tweet));\n    } catch (error) {\n      dispatch(tweetsDetailFailure(error));\n    }\n  };\n}\nexport const tweetsCreatedRequest = () => ({\n  type: TWEETS_CREATED_REQUEST\n});\nexport const tweetsCreatedSuccess = tweet => ({\n  type: TWEETS_CREATED_SUCCESS,\n  payload: tweet\n});\nexport const tweetsCreatedFailure = error => ({\n  type: TWEETS_CREATED_FAILURE,\n  error: true,\n  payload: error\n});\nexport function createTweet(tweet) {\n  return async function (dispatch, _getState, {\n    api: {\n      tweets\n    },\n    router\n  }) {\n    try {\n      dispatch(tweetsCreatedRequest());\n      const {\n        id\n      } = await tweets.createTweet(tweet);\n      // To complete tweet info\n      const createdTweet = await tweets.getTweet(id);\n      dispatch(tweetsCreatedSuccess(createdTweet));\n      router.navigate(`/tweets/${createdTweet.id}`);\n    } catch (error) {\n      dispatch(tweetsCreatedFailure(error));\n    }\n  };\n}\nexport const uiResetError = createAction('ui/reset_error');","map":{"version":3,"names":["createAction","createAsyncThunk","areTweetsLoaded","getTweet","AUTH_LOGIN_REQUEST","AUTH_LOGIN_SUCCESS","TWEETS_CREATED_REQUEST","TWEETS_CREATED_SUCCESS","TWEETS_CREATED_FAILURE","TWEETS_DETAIL_FAILURE","TWEETS_DETAIL_REQUEST","TWEETS_DETAIL_SUCCESS","TWEETS_LOADED_FAILURE","TWEETS_LOADED_REQUEST","TWEETS_LOADED_SUCCESS","authLogin","credentials","extra","api","auth","router","rejectWithValue","login","then","_router$state$locatio","_router$state$locatio2","to","state","location","from","pathname","navigate","catch","authLogout","_","logout","tweetsLoadedRequest","type","tweetsLoadedSuccess","tweets","payload","tweetsLoadedFailure","error","tweetsList","getLatestTweets","condition","getState","tweetsDetailRequest","tweetsDetailSuccess","tweet","tweetsDetailFailure","detailTweets","tweetId","dispatch","tweetsCreatedRequest","tweetsCreatedSuccess","tweetsCreatedFailure","createTweet","_getState","id","createdTweet","uiResetError"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_Toolkit/src/store/actions.js"],"sourcesContent":["import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { areTweetsLoaded, getTweet } from './selectors';\nimport {\n  AUTH_LOGIN_REQUEST,\n  AUTH_LOGIN_SUCCESS,\n  TWEETS_CREATED_REQUEST,\n  TWEETS_CREATED_SUCCESS,\n  TWEETS_CREATED_FAILURE,\n  TWEETS_DETAIL_FAILURE,\n  TWEETS_DETAIL_REQUEST,\n  TWEETS_DETAIL_SUCCESS,\n  TWEETS_LOADED_FAILURE,\n  TWEETS_LOADED_REQUEST,\n  TWEETS_LOADED_SUCCESS,\n} from './types';\n\n\nexport const authLogin = createAsyncThunk(\n  'auth/login',\n  (\n    credentials,\n    {\n      extra: {\n        api: { auth },\n        router,\n      },\n      rejectWithValue,\n    },\n  ) =>\n    auth\n      .login(credentials)\n      .then(() => {\n        const to = router.state.location.state?.from?.pathname || '/';\n        router.navigate(to);\n      })\n      .catch(rejectWithValue),\n);\n\nexport const authLogout = createAsyncThunk(\n  'auth/logout',\n  (\n    _,\n    {\n      extra: {\n        api: { auth },\n      },\n    },\n  ) => auth.logout(),\n);\n\nexport const tweetsLoadedRequest = () => ({\n  type: TWEETS_LOADED_REQUEST,\n});\n\nexport const tweetsLoadedSuccess = tweets => ({\n  type: TWEETS_LOADED_SUCCESS,\n  payload: tweets,\n});\n\nexport const tweetsLoadedFailure = error => ({\n  type: TWEETS_LOADED_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport const tweetsList = createAsyncThunk(\n  'tweets/list',\n  async (\n    _,\n    {\n      extra: {\n        api: { tweets },\n      },\n      rejectWithValue,\n    },\n  ) => {\n    try {\n      const tweetsList = await tweets.getLatestTweets();\n      return tweetsList;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n  { condition: (_, { getState }) => !areTweetsLoaded(getState()) },\n);\n\nexport const tweetsDetailRequest = () => ({\n  type: TWEETS_DETAIL_REQUEST,\n});\n\nexport const tweetsDetailSuccess = tweet => ({\n  type: TWEETS_DETAIL_SUCCESS,\n  payload: tweet,\n});\n\nexport const tweetsDetailFailure = error => ({\n  type: TWEETS_DETAIL_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function detailTweets(tweetId) {\n  return async function (dispatch, getState, { api: { tweets } }) {\n    if (getTweet(tweetId)(getState())) {\n      return;\n    }\n\n    try {\n      dispatch(tweetsDetailRequest());\n      const tweet = await tweets.getTweet(tweetId);\n      dispatch(tweetsDetailSuccess(tweet));\n    } catch (error) {\n      dispatch(tweetsDetailFailure(error));\n    }\n  };\n}\n\nexport const tweetsCreatedRequest = () => ({\n  type: TWEETS_CREATED_REQUEST,\n});\n\nexport const tweetsCreatedSuccess = tweet => ({\n  type: TWEETS_CREATED_SUCCESS,\n  payload: tweet,\n});\n\nexport const tweetsCreatedFailure = error => ({\n  type: TWEETS_CREATED_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function createTweet(tweet) {\n  return async function (dispatch, _getState, { api: { tweets }, router }) {\n    try {\n      dispatch(tweetsCreatedRequest());\n      const { id } = await tweets.createTweet(tweet);\n      // To complete tweet info\n      const createdTweet = await tweets.getTweet(id);\n      dispatch(tweetsCreatedSuccess(createdTweet));\n      router.navigate(`/tweets/${createdTweet.id}`);\n    } catch (error) {\n      dispatch(tweetsCreatedFailure(error));\n    }\n  };\n}\n\nexport const uiResetError = createAction('ui/reset_error');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}