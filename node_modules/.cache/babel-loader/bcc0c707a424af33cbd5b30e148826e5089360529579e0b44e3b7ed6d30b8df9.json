{"ast":null,"code":"import { configureStore as rtkConfigureStore } from '@reduxjs/toolkit';\nimport * as reducers from './reducers';\nimport * as actionCreators from './actions';\nimport * as tweets from '../pages/tweets/service';\nimport * as auth from '../pages/auth/service';\n\n// const thunk = extraArgument => store => next => action => {\n//   if (typeof action === 'function') {\n//     return action(store.dispatch, store.getState, extraArgument);\n//   }\n//   next(action);\n// };\n\nconst logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action, store.getState());\n  const result = next(action);\n  console.log('final state', store.getState());\n  console.groupEnd();\n  return result;\n};\nconst noAction = () => next => action => {\n  if (action.type.endsWith('/no-throw')) {\n    return;\n  }\n  return next(action);\n};\nconst timestamp = () => next => action => {\n  return next({\n    ...action,\n    meta: {\n      ...action.meta,\n      timestamp: new Date()\n    }\n  });\n};\nconst failureRedirects = (router, redirectsMap) => store => next => action => {\n  const result = next(action);\n  if (action.error) {\n    const redirect = redirectsMap[action.payload.status];\n    if (redirect) {\n      router.navigate(redirect);\n    }\n  }\n  return result;\n};\nconst historyEnhancer = createStore => (reducer, preloadedState, enhancer) => {\n  function historyReducer(state, action) {\n    const {\n      history,\n      ...restState\n    } = state;\n    if (action.type === 'history/back') {\n      return {\n        ...history.last,\n        history: {\n          last: null,\n          current: history.last\n        }\n      };\n    }\n    const newState = reducer(restState, action);\n    return {\n      ...newState,\n      history: {\n        last: restState,\n        current: newState\n      }\n    };\n  }\n  return createStore(historyReducer, preloadedState, enhancer);\n};\nexport default function configureStore(preloadedState, {\n  router\n}) {\n  const extraMiddleware = [timestamp, failureRedirects(router, {\n    401: '/login',\n    404: '/404'\n  }), logger\n  // noAction,\n  ];\n\n  const store = rtkConfigureStore({\n    reducer: reducers,\n    preloadedState,\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      thunk: {\n        extraArgument: {\n          api: {\n            auth,\n            tweets\n          },\n          router\n        }\n      },\n      serializableCheck: false\n    }).concat(extraMiddleware),\n    devTools: {\n      actionCreators\n    },\n    enhancers: getDefaultEnhancers => getDefaultEnhancers().concat(historyEnhancer)\n  });\n  return store;\n}","map":{"version":3,"names":["configureStore","rtkConfigureStore","reducers","actionCreators","tweets","auth","logger","store","next","action","console","group","type","info","getState","result","log","groupEnd","noAction","endsWith","timestamp","meta","Date","failureRedirects","router","redirectsMap","error","redirect","payload","status","navigate","historyEnhancer","createStore","reducer","preloadedState","enhancer","historyReducer","state","history","restState","last","current","newState","extraMiddleware","middleware","getDefaultMiddleware","thunk","extraArgument","api","serializableCheck","concat","devTools","enhancers","getDefaultEnhancers"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_Toolkit/src/store/index.js"],"sourcesContent":["import { configureStore as rtkConfigureStore } from '@reduxjs/toolkit';\n\nimport * as reducers from './reducers';\nimport * as actionCreators from './actions';\n\nimport * as tweets from '../pages/tweets/service';\nimport * as auth from '../pages/auth/service';\n\n// const thunk = extraArgument => store => next => action => {\n//   if (typeof action === 'function') {\n//     return action(store.dispatch, store.getState, extraArgument);\n//   }\n//   next(action);\n// };\n\nconst logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action, store.getState());\n  const result = next(action);\n  console.log('final state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nconst noAction = () => next => action => {\n  if (action.type.endsWith('/no-throw')) {\n    return;\n  }\n  return next(action);\n};\n\nconst timestamp = () => next => action => {\n  return next({\n    ...action,\n    meta: { ...action.meta, timestamp: new Date() },\n  });\n};\n\nconst failureRedirects = (router, redirectsMap) => store => next => action => {\n  const result = next(action);\n\n  if (action.error) {\n    const redirect = redirectsMap[action.payload.status];\n    if (redirect) {\n      router.navigate(redirect);\n    }\n  }\n\n  return result;\n};\n\nconst historyEnhancer = createStore => (reducer, preloadedState, enhancer) => {\n  function historyReducer(state, action) {\n    const { history, ...restState } = state;\n\n    if (action.type === 'history/back') {\n      return {\n        ...history.last,\n        history: {\n          last: null,\n          current: history.last,\n        },\n      };\n    }\n\n    const newState = reducer(restState, action);\n    return {\n      ...newState,\n      history: {\n        last: restState,\n        current: newState,\n      },\n    };\n  }\n\n  return createStore(historyReducer, preloadedState, enhancer);\n};\n\nexport default function configureStore(preloadedState, { router }) {\n  const extraMiddleware = [\n    timestamp,\n    failureRedirects(router, { 401: '/login', 404: '/404' }),\n    logger,\n    // noAction,\n  ];\n  const store = rtkConfigureStore({\n    reducer: reducers,\n    preloadedState,\n    middleware: getDefaultMiddleware =>\n      getDefaultMiddleware({\n        thunk: { extraArgument: { api: { auth, tweets }, router } },\n        serializableCheck: false,\n      }).concat(extraMiddleware),\n    devTools: {\n      actionCreators,\n    },\n    enhancers: getDefaultEnhancers =>\n      getDefaultEnhancers().concat(historyEnhancer),\n  });\n  return store;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}