{"ast":null,"code":"import client, { removeAuthorizationHeader, setAuthorizationHeader } from '../../api/client';\nimport storage from '../../utils/storage';\nexport const login = credentials => {\n  return client.post('/auth/login', credentials).then(({\n    accessToken\n  }) => {\n    setAuthorizationHeader(accessToken);\n    storage.set('auth', accessToken);\n  });\n};\nexport const logout = () => {\n  return Promise.resolve().then(() => {\n    removeAuthorizationHeader();\n    storage.remove('auth');\n  });\n};","map":{"version":3,"names":["client","removeAuthorizationHeader","setAuthorizationHeader","storage","login","credentials","post","then","accessToken","set","logout","Promise","resolve","remove"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_Toolkit/src/pages/auth/service.js"],"sourcesContent":["import client, {\n  removeAuthorizationHeader,\n  setAuthorizationHeader,\n} from '../../api/client';\nimport storage from '../../utils/storage';\n\nexport const login = credentials => {\n  return client.post('/auth/login', credentials).then(({ accessToken }) => {\n    setAuthorizationHeader(accessToken);\n    storage.set('auth', accessToken);\n  });\n};\n\nexport const logout = () => {\n  return Promise.resolve().then(() => {\n    removeAuthorizationHeader();\n    storage.remove('auth');\n  });\n};\n\n"],"mappings":"AAAA,OAAOA,MAAM,IACXC,yBAAyB,EACzBC,sBAAsB,QACjB,kBAAkB;AACzB,OAAOC,OAAO,MAAM,qBAAqB;AAEzC,OAAO,MAAMC,KAAK,GAAGC,WAAW,IAAI;EAClC,OAAOL,MAAM,CAACM,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC,CAACE,IAAI,CAAC,CAAC;IAAEC;EAAY,CAAC,KAAK;IACvEN,sBAAsB,CAACM,WAAW,CAAC;IACnCL,OAAO,CAACM,GAAG,CAAC,MAAM,EAAED,WAAW,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACL,IAAI,CAAC,MAAM;IAClCN,yBAAyB,CAAC,CAAC;IAC3BE,OAAO,CAACU,MAAM,CAAC,MAAM,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}