{"ast":null,"code":"import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { areTweetsLoaded, getTweet } from './selectors';\nimport { AUTH_LOGIN_REQUEST, AUTH_LOGIN_SUCCESS, TWEETS_CREATED_REQUEST, TWEETS_CREATED_SUCCESS, TWEETS_CREATED_FAILURE, TWEETS_DETAIL_FAILURE, TWEETS_DETAIL_REQUEST, TWEETS_DETAIL_SUCCESS, TWEETS_LOADED_FAILURE, TWEETS_LOADED_REQUEST, TWEETS_LOADED_SUCCESS } from './types';\nexport const authLoginRequest = () => ({\n  type: AUTH_LOGIN_REQUEST\n});\nexport const authLoginSuccess = () => ({\n  type: AUTH_LOGIN_SUCCESS\n});\nexport const authLoginFailure = createAction('auth/login/failure', error => ({\n  error: true,\n  payload: error\n}));\nexport const authLogin = createAsyncThunk('auth/login', (credentials, {\n  extra: {\n    api: {\n      auth\n    },\n    router\n  },\n  rejectWithValue\n}) => auth.login(credentials).then(() => {\n  var _router$state$locatio, _router$state$locatio2;\n  const to = ((_router$state$locatio = router.state.location.state) === null || _router$state$locatio === void 0 ? void 0 : (_router$state$locatio2 = _router$state$locatio.from) === null || _router$state$locatio2 === void 0 ? void 0 : _router$state$locatio2.pathname) || '/';\n  router.navigate(to);\n}).catch(rejectWithValue));\nexport const authLogout = createAction('auth/logout');\nexport const tweetsLoadedRequest = () => ({\n  type: TWEETS_LOADED_REQUEST\n});\nexport const tweetsLoadedSuccess = tweets => ({\n  type: TWEETS_LOADED_SUCCESS,\n  payload: tweets\n});\nexport const tweetsLoadedFailure = error => ({\n  type: TWEETS_LOADED_FAILURE,\n  error: true,\n  payload: error\n});\nexport function loadTweets() {\n  return async function (dispatch, getState, {\n    api: {\n      tweets\n    }\n  }) {\n    if (areTweetsLoaded(getState())) {\n      return;\n    }\n    try {\n      dispatch(tweetsLoadedRequest());\n      const tweetsList = await tweets.getLatestTweets();\n      dispatch(tweetsLoadedSuccess(tweetsList));\n    } catch (error) {\n      dispatch(tweetsLoadedFailure(error));\n    }\n  };\n}\nexport const tweetsDetailRequest = () => ({\n  type: TWEETS_DETAIL_REQUEST\n});\nexport const tweetsDetailSuccess = tweet => ({\n  type: TWEETS_DETAIL_SUCCESS,\n  payload: tweet\n});\nexport const tweetsDetailFailure = error => ({\n  type: TWEETS_DETAIL_FAILURE,\n  error: true,\n  payload: error\n});\nexport function detailTweets(tweetId) {\n  return async function (dispatch, getState, {\n    api: {\n      tweets\n    }\n  }) {\n    if (getTweet(tweetId)(getState())) {\n      return;\n    }\n    try {\n      dispatch(tweetsDetailRequest());\n      const tweet = await tweets.getTweet(tweetId);\n      dispatch(tweetsDetailSuccess(tweet));\n    } catch (error) {\n      dispatch(tweetsDetailFailure(error));\n    }\n  };\n}\nexport const tweetsCreatedRequest = () => ({\n  type: TWEETS_CREATED_REQUEST\n});\nexport const tweetsCreatedSuccess = tweet => ({\n  type: TWEETS_CREATED_SUCCESS,\n  payload: tweet\n});\nexport const tweetsCreatedFailure = error => ({\n  type: TWEETS_CREATED_FAILURE,\n  error: true,\n  payload: error\n});\nexport function createTweet(tweet) {\n  return async function (dispatch, _getState, {\n    api: {\n      tweets\n    },\n    router\n  }) {\n    try {\n      dispatch(tweetsCreatedRequest());\n      const {\n        id\n      } = await tweets.createTweet(tweet);\n      // To complete tweet info\n      const createdTweet = await tweets.getTweet(id);\n      dispatch(tweetsCreatedSuccess(createdTweet));\n      router.navigate(`/tweets/${createdTweet.id}`);\n    } catch (error) {\n      dispatch(tweetsCreatedFailure(error));\n    }\n  };\n}\nexport const uiResetError = createAction('ui/reset_error');","map":{"version":3,"names":["createAction","createAsyncThunk","areTweetsLoaded","getTweet","AUTH_LOGIN_REQUEST","AUTH_LOGIN_SUCCESS","TWEETS_CREATED_REQUEST","TWEETS_CREATED_SUCCESS","TWEETS_CREATED_FAILURE","TWEETS_DETAIL_FAILURE","TWEETS_DETAIL_REQUEST","TWEETS_DETAIL_SUCCESS","TWEETS_LOADED_FAILURE","TWEETS_LOADED_REQUEST","TWEETS_LOADED_SUCCESS","authLoginRequest","type","authLoginSuccess","authLoginFailure","error","payload","authLogin","credentials","extra","api","auth","router","rejectWithValue","login","then","_router$state$locatio","_router$state$locatio2","to","state","location","from","pathname","navigate","catch","authLogout","tweetsLoadedRequest","tweetsLoadedSuccess","tweets","tweetsLoadedFailure","loadTweets","dispatch","getState","tweetsList","getLatestTweets","tweetsDetailRequest","tweetsDetailSuccess","tweet","tweetsDetailFailure","detailTweets","tweetId","tweetsCreatedRequest","tweetsCreatedSuccess","tweetsCreatedFailure","createTweet","_getState","id","createdTweet","uiResetError"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_Toolkit/src/store/actions.js"],"sourcesContent":["import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { areTweetsLoaded, getTweet } from './selectors';\nimport {\n  AUTH_LOGIN_REQUEST,\n  AUTH_LOGIN_SUCCESS,\n  TWEETS_CREATED_REQUEST,\n  TWEETS_CREATED_SUCCESS,\n  TWEETS_CREATED_FAILURE,\n  TWEETS_DETAIL_FAILURE,\n  TWEETS_DETAIL_REQUEST,\n  TWEETS_DETAIL_SUCCESS,\n  TWEETS_LOADED_FAILURE,\n  TWEETS_LOADED_REQUEST,\n  TWEETS_LOADED_SUCCESS,\n} from './types';\n\nexport const authLoginRequest = () => ({\n  type: AUTH_LOGIN_REQUEST,\n});\n\nexport const authLoginSuccess = () => ({\n  type: AUTH_LOGIN_SUCCESS,\n});\n\nexport const authLoginFailure = createAction('auth/login/failure', error => ({\n  error: true,\n  payload: error,\n}));\n\nexport const authLogin = createAsyncThunk(\n  'auth/login',\n  (\n    credentials,\n    {\n      extra: {\n        api: { auth },\n        router,\n      },\n      rejectWithValue,\n    },\n  ) =>\n    auth\n      .login(credentials)\n      .then(() => {\n        const to = router.state.location.state?.from?.pathname || '/';\n        router.navigate(to);\n      })\n      .catch(rejectWithValue),\n);\n\nexport const authLogout = createAction('auth/logout');\n\nexport const tweetsLoadedRequest = () => ({\n  type: TWEETS_LOADED_REQUEST,\n});\n\nexport const tweetsLoadedSuccess = tweets => ({\n  type: TWEETS_LOADED_SUCCESS,\n  payload: tweets,\n});\n\nexport const tweetsLoadedFailure = error => ({\n  type: TWEETS_LOADED_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function loadTweets() {\n  return async function (dispatch, getState, { api: { tweets } }) {\n    if (areTweetsLoaded(getState())) {\n      return;\n    }\n\n    try {\n      dispatch(tweetsLoadedRequest());\n      const tweetsList = await tweets.getLatestTweets();\n      dispatch(tweetsLoadedSuccess(tweetsList));\n    } catch (error) {\n      dispatch(tweetsLoadedFailure(error));\n    }\n  };\n}\n\nexport const tweetsDetailRequest = () => ({\n  type: TWEETS_DETAIL_REQUEST,\n});\n\nexport const tweetsDetailSuccess = tweet => ({\n  type: TWEETS_DETAIL_SUCCESS,\n  payload: tweet,\n});\n\nexport const tweetsDetailFailure = error => ({\n  type: TWEETS_DETAIL_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function detailTweets(tweetId) {\n  return async function (dispatch, getState, { api: { tweets } }) {\n    if (getTweet(tweetId)(getState())) {\n      return;\n    }\n\n    try {\n      dispatch(tweetsDetailRequest());\n      const tweet = await tweets.getTweet(tweetId);\n      dispatch(tweetsDetailSuccess(tweet));\n    } catch (error) {\n      dispatch(tweetsDetailFailure(error));\n    }\n  };\n}\n\nexport const tweetsCreatedRequest = () => ({\n  type: TWEETS_CREATED_REQUEST,\n});\n\nexport const tweetsCreatedSuccess = tweet => ({\n  type: TWEETS_CREATED_SUCCESS,\n  payload: tweet,\n});\n\nexport const tweetsCreatedFailure = error => ({\n  type: TWEETS_CREATED_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function createTweet(tweet) {\n  return async function (dispatch, _getState, { api: { tweets }, router }) {\n    try {\n      dispatch(tweetsCreatedRequest());\n      const { id } = await tweets.createTweet(tweet);\n      // To complete tweet info\n      const createdTweet = await tweets.getTweet(id);\n      dispatch(tweetsCreatedSuccess(createdTweet));\n      router.navigate(`/tweets/${createdTweet.id}`);\n    } catch (error) {\n      dispatch(tweetsCreatedFailure(error));\n    }\n  };\n}\n\nexport const uiResetError = createAction('ui/reset_error');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}