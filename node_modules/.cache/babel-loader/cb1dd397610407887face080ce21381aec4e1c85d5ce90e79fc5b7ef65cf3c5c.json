{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nimport { areTweetsLoaded, getTweet } from './selectors';\nimport { AUTH_LOGIN_REQUEST, AUTH_LOGIN_SUCCESS, AUTH_LOGOUT, TWEETS_CREATED_REQUEST, TWEETS_CREATED_SUCCESS, TWEETS_CREATED_FAILURE, TWEETS_DETAIL_FAILURE, TWEETS_DETAIL_REQUEST, TWEETS_DETAIL_SUCCESS, TWEETS_LOADED_FAILURE, TWEETS_LOADED_REQUEST, TWEETS_LOADED_SUCCESS } from './types';\nexport const authLogin = createAsyncThunk('auth/login', (credentials, {\n  extra: {\n    api: {\n      auth\n    },\n    router\n  },\n  rejectWithValue\n}) => auth.login(credentials).then(() => {\n  var _router$state$locatio, _router$state$locatio2;\n  const to = ((_router$state$locatio = router.state.location.state) === null || _router$state$locatio === void 0 ? void 0 : (_router$state$locatio2 = _router$state$locatio.from) === null || _router$state$locatio2 === void 0 ? void 0 : _router$state$locatio2.pathname) || '/';\n  router.navigate(to);\n}).catch(rejectWithValue));\nexport const authLogout = () => ({\n  type: AUTH_LOGOUT\n});\nexport const tweetsLoadedRequest = () => ({\n  type: TWEETS_LOADED_REQUEST\n});\nexport const tweetsLoadedSuccess = tweets => ({\n  type: TWEETS_LOADED_SUCCESS,\n  payload: tweets\n});\nexport const tweetsLoadedFailure = error => ({\n  type: TWEETS_LOADED_FAILURE,\n  error: true,\n  payload: error\n});\nexport function loadTweets() {\n  return async function (dispatch, getState, {\n    api: {\n      tweets\n    }\n  }) {\n    if (areTweetsLoaded(getState())) {\n      return;\n    }\n    try {\n      dispatch(tweetsLoadedRequest());\n      const tweetsList = await tweets.getLatestTweets();\n      dispatch(tweetsLoadedSuccess(tweetsList));\n    } catch (error) {\n      dispatch(tweetsLoadedFailure(error));\n    }\n  };\n}\nexport const tweetsDetailRequest = () => ({\n  type: TWEETS_DETAIL_REQUEST\n});\nexport const tweetsDetailSuccess = tweet => ({\n  type: TWEETS_DETAIL_SUCCESS,\n  payload: tweet\n});\nexport const tweetsDetailFailure = error => ({\n  type: TWEETS_DETAIL_FAILURE,\n  error: true,\n  payload: error\n});\nexport function detailTweets(tweetId) {\n  return async function (dispatch, getState, {\n    api: {\n      tweets\n    }\n  }) {\n    if (getTweet(tweetId)(getState())) {\n      return;\n    }\n    try {\n      dispatch(tweetsDetailRequest());\n      const tweet = await tweets.getTweet(tweetId);\n      dispatch(tweetsDetailSuccess(tweet));\n    } catch (error) {\n      dispatch(tweetsDetailFailure(error));\n    }\n  };\n}\nexport const tweetsCreatedRequest = () => ({\n  type: TWEETS_CREATED_REQUEST\n});\nexport const tweetsCreatedSuccess = tweet => ({\n  type: TWEETS_CREATED_SUCCESS,\n  payload: tweet\n});\nexport const tweetsCreatedFailure = error => ({\n  type: TWEETS_CREATED_FAILURE,\n  error: true,\n  payload: error\n});\nexport function createTweet(tweet) {\n  return async function (dispatch, _getState, {\n    api: {\n      tweets\n    },\n    router\n  }) {\n    try {\n      dispatch(tweetsCreatedRequest());\n      const {\n        id\n      } = await tweets.createTweet(tweet);\n      // To complete tweet info\n      const createdTweet = await tweets.getTweet(id);\n      dispatch(tweetsCreatedSuccess(createdTweet));\n      router.navigate(`/tweets/${createdTweet.id}`);\n    } catch (error) {\n      dispatch(tweetsCreatedFailure(error));\n    }\n  };\n}\nexport const uiResetError = createAction('ui/reset_error');","map":{"version":3,"names":["createAction","areTweetsLoaded","getTweet","AUTH_LOGIN_REQUEST","AUTH_LOGIN_SUCCESS","AUTH_LOGOUT","TWEETS_CREATED_REQUEST","TWEETS_CREATED_SUCCESS","TWEETS_CREATED_FAILURE","TWEETS_DETAIL_FAILURE","TWEETS_DETAIL_REQUEST","TWEETS_DETAIL_SUCCESS","TWEETS_LOADED_FAILURE","TWEETS_LOADED_REQUEST","TWEETS_LOADED_SUCCESS","authLogin","createAsyncThunk","credentials","extra","api","auth","router","rejectWithValue","login","then","_router$state$locatio","_router$state$locatio2","to","state","location","from","pathname","navigate","catch","authLogout","type","tweetsLoadedRequest","tweetsLoadedSuccess","tweets","payload","tweetsLoadedFailure","error","loadTweets","dispatch","getState","tweetsList","getLatestTweets","tweetsDetailRequest","tweetsDetailSuccess","tweet","tweetsDetailFailure","detailTweets","tweetId","tweetsCreatedRequest","tweetsCreatedSuccess","tweetsCreatedFailure","createTweet","_getState","id","createdTweet","uiResetError"],"sources":["/Users/alex/Desktop/KEEPKODING/REACT_AVANZADO/GIT/FullStack07_React_app_tweeter_REDUX_Toolkit/src/store/actions.js"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nimport { areTweetsLoaded, getTweet } from './selectors';\nimport {\n  AUTH_LOGIN_REQUEST,\n  AUTH_LOGIN_SUCCESS,\n  AUTH_LOGOUT,\n  TWEETS_CREATED_REQUEST,\n  TWEETS_CREATED_SUCCESS,\n  TWEETS_CREATED_FAILURE,\n  TWEETS_DETAIL_FAILURE,\n  TWEETS_DETAIL_REQUEST,\n  TWEETS_DETAIL_SUCCESS,\n  TWEETS_LOADED_FAILURE,\n  TWEETS_LOADED_REQUEST,\n  TWEETS_LOADED_SUCCESS,\n} from './types';\n\nexport const authLogin = createAsyncThunk(\n  'auth/login',\n  (\n    credentials,\n    {\n      extra: {\n        api: { auth },\n        router,\n      },\n      rejectWithValue,\n    },\n  ) =>\n    auth\n      .login(credentials)\n      .then(() => {\n        const to = router.state.location.state?.from?.pathname || '/';\n        router.navigate(to);\n      })\n      .catch(rejectWithValue),\n);\n\nexport const authLogout = () => ({\n  type: AUTH_LOGOUT,\n});\n\nexport const tweetsLoadedRequest = () => ({\n  type: TWEETS_LOADED_REQUEST,\n});\n\nexport const tweetsLoadedSuccess = tweets => ({\n  type: TWEETS_LOADED_SUCCESS,\n  payload: tweets,\n});\n\nexport const tweetsLoadedFailure = error => ({\n  type: TWEETS_LOADED_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function loadTweets() {\n  return async function (dispatch, getState, { api: { tweets } }) {\n    if (areTweetsLoaded(getState())) {\n      return;\n    }\n\n    try {\n      dispatch(tweetsLoadedRequest());\n      const tweetsList = await tweets.getLatestTweets();\n      dispatch(tweetsLoadedSuccess(tweetsList));\n    } catch (error) {\n      dispatch(tweetsLoadedFailure(error));\n    }\n  };\n}\n\nexport const tweetsDetailRequest = () => ({\n  type: TWEETS_DETAIL_REQUEST,\n});\n\nexport const tweetsDetailSuccess = tweet => ({\n  type: TWEETS_DETAIL_SUCCESS,\n  payload: tweet,\n});\n\nexport const tweetsDetailFailure = error => ({\n  type: TWEETS_DETAIL_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function detailTweets(tweetId) {\n  return async function (dispatch, getState, { api: { tweets } }) {\n    if (getTweet(tweetId)(getState())) {\n      return;\n    }\n\n    try {\n      dispatch(tweetsDetailRequest());\n      const tweet = await tweets.getTweet(tweetId);\n      dispatch(tweetsDetailSuccess(tweet));\n    } catch (error) {\n      dispatch(tweetsDetailFailure(error));\n    }\n  };\n}\n\nexport const tweetsCreatedRequest = () => ({\n  type: TWEETS_CREATED_REQUEST,\n});\n\nexport const tweetsCreatedSuccess = tweet => ({\n  type: TWEETS_CREATED_SUCCESS,\n  payload: tweet,\n});\n\nexport const tweetsCreatedFailure = error => ({\n  type: TWEETS_CREATED_FAILURE,\n  error: true,\n  payload: error,\n});\n\nexport function createTweet(tweet) {\n  return async function (dispatch, _getState, { api: { tweets }, router }) {\n    try {\n      dispatch(tweetsCreatedRequest());\n      const { id } = await tweets.createTweet(tweet);\n      // To complete tweet info\n      const createdTweet = await tweets.getTweet(id);\n      dispatch(tweetsCreatedSuccess(createdTweet));\n      router.navigate(`/tweets/${createdTweet.id}`);\n    } catch (error) {\n      dispatch(tweetsCreatedFailure(error));\n    }\n  };\n}\n\nexport const uiResetError = createAction('ui/reset_error');"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}